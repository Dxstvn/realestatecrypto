# Preview Deployment Workflow - PropertyChain
# 
# Deploys preview environments for pull requests
# Following UpdatedUIPlan.md Step 60 specifications and CLAUDE.md principles

name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

env:
  NODE_VERSION: '20'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Deploy preview to Vercel
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Preview to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} | tail -1)
          echo "url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $DEPLOYMENT_URL"

      - name: Add deployment alias
        run: |
          ALIAS="pr-${{ github.event.pull_request.number }}-propertychain"
          vercel alias set ${{ steps.deploy.outputs.url }} $ALIAS.vercel.app --token=${{ secrets.VERCEL_TOKEN }}
          echo "Alias URL: https://$ALIAS.vercel.app"

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            const alias = `https://pr-${{ github.event.pull_request.number }}-propertychain.vercel.app`;
            
            const comment = `
            ## ðŸš€ Preview Deployment Ready!
            
            Your changes have been deployed to a preview environment:
            
            ðŸ”— **Preview URL**: ${url}
            ðŸ”— **Alias URL**: ${alias}
            
            ### Preview Features:
            - âœ… Automatic SSL certificate
            - âœ… Isolated environment
            - âœ… Production-like configuration
            - âœ… Real-time logs available
            
            ### Next Steps:
            1. Review the preview deployment
            2. Run automated tests against preview URL
            3. Share with stakeholders for feedback
            4. Merge when ready
            
            ---
            
            <details>
            <summary>ðŸ“Š Deployment Details</summary>
            
            - **Commit**: \`${{ github.sha }}\`
            - **Branch**: \`${{ github.head_ref }}\`
            - **Deployed at**: ${new Date().toISOString()}
            - **Environment**: Preview
            
            </details>
            
            ---
            
            _This preview will be automatically deleted when the PR is closed._
            `;
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment Ready')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Run smoke tests on preview
        run: |
          echo "Running smoke tests against preview URL..."
          npx wait-on ${{ steps.deploy.outputs.url }} --timeout 60000
          
          # Basic health check
          curl -f ${{ steps.deploy.outputs.url }} || exit 1
          
          # Check critical pages
          curl -f ${{ steps.deploy.outputs.url }}/properties || exit 1
          curl -f ${{ steps.deploy.outputs.url }}/marketplace || exit 1

      - name: Run Lighthouse on preview
        run: |
          npm install -g @lhci/cli
          lhci autorun --collect.url=${{ steps.deploy.outputs.url }}
        continue-on-error: true

  # Cleanup preview on PR close
  cleanup-preview:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Remove preview deployment
        run: |
          ALIAS="pr-${{ github.event.pull_request.number }}-propertychain"
          vercel remove $ALIAS --yes --token=${{ secrets.VERCEL_TOKEN }}
        continue-on-error: true

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `
            ## ðŸ§¹ Preview Deployment Cleaned Up
            
            The preview deployment for this PR has been removed.
            
            Thank you for your contribution! ðŸŽ‰
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });